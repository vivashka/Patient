@page "/"
@using Models
@using System.Text.Json;

@using System.Text.Json.Serialization;

@inject DialogService DialogService

>>>>>>> 6522f9ae6ecc6426a9bd0bb0a38473a2c280c55b

<div class="d-flex m-20">
    <RadzenText TextStyle="TextStyle.H5">Header</RadzenText>
</div>

<RadzenDataGrid TItem="Patient" Data="@Data">
    <Columns>
        <RadzenDataGridColumn TItem="Patient" Property="Firstname" Title="Фамилия" />
        <RadzenDataGridColumn TItem="Patient" Property="Surname" Title="Имя" />
        <RadzenDataGridColumn TItem="Patient" Property="Patronymic" Title="Отчество" />
        <RadzenDataGridColumn TItem="Patient" Property="BirthDate" Title="Возраст" />
        <RadzenDataGridColumn TItem="Patient" Property="Snils.DocumentNumber" Title="СНИЛС" />
        <RadzenDataGridColumn TItem="Patient" Title="Доп. Инфо">
            <Template Context="Data">
                <RadzenButton Click=@(args => ShowCloseableFromOverlayDialog(Data)) Text="Подробнее"
                    ButtonStyle="ButtonStyle.Primary" />
            </Template>
        </RadzenDataGridColumn>
        </Columns>
</RadzenDataGrid>
@code {
    [Parameter] public List<Patient> Data { get; set; } = new List<Patient>();
    protected override void OnInitialized()
    {
        string json = File.ReadAllText(@"patients.json");
        Data = JsonSerializer.Deserialize<List<Patient>>(json.ToString(),
        new JsonSerializerOptions() { IgnoreNullValues = true });
    }

    async Task ShowCloseableFromOverlayDialog(Patient patient)
    {
        await DialogService.OpenAsync("", ds => @<AdditionalViewComponent OnePatient="patient" />,
        new DialogOptions() { CloseDialogOnOverlayClick = true, Width = "max-content", ShowTitle = false});
    }
}